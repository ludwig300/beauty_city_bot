# Generated by Django 4.1.4 on 2022-12-09 06:34

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Salon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salon_name', models.CharField(db_index=True, max_length=200, verbose_name='Наименование салона')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес Салона')),
                ('lat', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('lon', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(db_index=True, max_length=200, verbose_name='Наименование услуги')),
                ('price', models.IntegerField(db_index=True, verbose_name='Цена услуги')),
            ],
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialist_name', models.CharField(db_index=True, max_length=200, verbose_name='ФИО Специалиста')),
                ('salon', models.ManyToManyField(blank=True, related_name='salons', to='services.salon', verbose_name='Салоны, в которых работает Мастер')),
                ('service', models.ManyToManyField(blank=True, related_name='services', to='services.service', verbose_name='Услуги, оказываемые Мастером')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(db_index=True, max_length=200, verbose_name='ФИО Пользователя')),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('lat', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('lon', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
            ],
        ),
        migrations.CreateModel(
            name='SpecialistInSalon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, verbose_name='Дата работы')),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.salon', verbose_name='в каком салоне работает')),
                ('specialist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.specialist', verbose_name='Имя мастера')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_datetime', models.DateTimeField(auto_now=True, verbose_name='Дата и время регистрации на посещение')),
                ('date_service', models.DateField(verbose_name='Дата записи')),
                ('time_service', models.TimeField(verbose_name='Время записи')),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.salon', verbose_name='Салон')),
                ('service', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='services.service', verbose_name='Услуга')),
                ('specialist', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='services.specialist', verbose_name='Мастер')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules_user', to='services.user', verbose_name='Имя клиента')),
            ],
        ),
    ]
